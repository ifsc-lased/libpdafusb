# https://gist.github.com/NickNaso/0d478f1481686d5bcc868cac06620a60
name: Ubuntu
on:
  release:
    types: [created]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            artifact: "libpdafusb_ubuntu_gcc",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a -tzip",
            generators: "Ninja"
          }

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake
          ninja --version
          cmake --version
          gcc --version

      - name: Configure
        shell: bash
        run: |
          mkdir instdir
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.config.build_type }}
      
      - name: Install Strip
        shell: bash
        run: cmake --install build --strip

      - name: Set output
        id: get_version
        shell: bash
        run: |
          echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
      
      - name: Rename attribute artifact
        shell: bash
        run: |
          echo "artifact=${{ matrix.config.artifact }}-${{ steps.get_version.outputs.VERSION }}.zip" >> $GITHUB_ENV

      - name: Pack
        shell: bash
        working-directory: instdir
        run: |
          ls -laR
          ${{ matrix.config.archiver }} ../${{ env.artifact }} .

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ./${{ env.artifact}}
          name: ${{ env.artifact }}

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
         files: |
          ${{ env.artifact }}